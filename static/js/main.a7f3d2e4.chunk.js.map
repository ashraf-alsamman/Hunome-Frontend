{"version":3,"sources":["redux/types/Types.ts","redux/actions/SongActions.ts","redux/effects/Songs.ts","App.tsx","redux/reducers/SongReducer.ts","redux/reducers/index.ts","redux/store/index.ts","index.tsx"],"names":["GET_SONGS","getSongsAction","songs","type","payload","axios","require","App","useState","opener","setOpener","query","setQuery","noData","setnoData","dispatch","useDispatch","useSelector","state","useEffect","get","Config","api","then","response","data","feed","entry","catch","error","console","log","Items","filter","label","toLowerCase","includes","map","index","className","src","htmlFor","checked","onChange","value","onColor","onHandleColor","handleDiameter","uncheckedIcon","checkedIcon","boxShadow","activeBoxShadow","height","width","id","event","target","placeholder","aria-label","aria-describedby","length","CircularProgress","initialState","rootReducer","combineReducers","action","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a7f3d2e4.chunk.js","sourcesContent":["import { Songs } from '../interfaces/Song';\n\nexport const GET_SONGS = 'GET_SONGS';\nexport const SONGS_ACTION = 'SONG_ACTION';\n\nexport interface GetSongStateType {\n  songs: Songs[];\n}\n\ninterface GetSongsActionType {\n  type: typeof GET_SONGS;\n  payload: Songs[];\n}\nexport type SongsActionType = GetSongsActionType;","import {SONGS_ACTION, GET_SONGS, SongsActionType } from '../types/Types';\nimport { Songs } from '../interfaces/Song';\n\nexport const getSongsAction = (songs: Songs[]): SongsActionType => {\n  return {\n    type: GET_SONGS,\n    payload: songs\n  };\n};\n\nexport const SongAction = (songs: Songs[]): any => {\n    return {\n      type: SONGS_ACTION,\n      payload: songs\n    };\n};","import { getSongsAction , SongAction} from '../actions/SongActions';\nimport { Dispatch } from 'redux';\nimport { SongsActionType} from '../types/Types';\n\nimport Config from '../../config/config.json';\nconst axios = require('axios');\n\n\nexport const getSongs = () => {\n\n  return function (dispatch: Dispatch<SongsActionType>) {\n    axios.get(Config.api+'topsongs/limit=30/json')\n    .then(function (response) {\n      dispatch(getSongsAction(response.data.feed.entry));\n      return response;\n    })\n    .catch(function (error) {\n      console.log(error);\n    })\n    .then(function () {\n      // always executed\n    });\n  };\n\n};\n\nexport const getAlbums = () => {\n\n  return function (dispatch: Dispatch<SongsActionType>) {\n    axios.get(Config.api+'topalbums/limit=30/json')\n    .then(function (response) {\n      dispatch(getSongsAction(response.data.feed.entry));\n      return response;\n    })\n    .catch(function (error) {\n      console.log(error);\n    })\n    .then(function () {\n      // always executed\n    });\n  };\n\n};\n\nexport const Filter = (data) => {\n\n  return function (dispatch: Dispatch<SongsActionType>) {\n      \n  };\n\n};\n \n\n \n\n\n\n\n\n\n \n\n \n\n\n\n\n ","import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getSongs, getAlbums } from \"./redux/effects/Songs\";\nimport { Songs } from \"./redux/interfaces/Song\";\nimport { AppState } from \"./redux/store\";\nimport Switch from \"react-switch\";\nimport CircularProgress from '@mui/material/CircularProgress';\n\nexport const App: React.FC = () => {\n  const [opener, setOpener] = useState(true);\n  const [query, setQuery] = useState(\"\");\n  const [noData, setnoData] = useState(false);\n  const dispatch = useDispatch();\n\n  const handleChange = (value) => {\n    value ? setOpener(true) : setOpener(false);\n  };\n\n  const songs = useSelector((state: AppState) => state.songs);\n\n  useEffect(() => {\n    if (opener) {\n      dispatch(getSongs());\n    } else {\n      dispatch(getAlbums());\n    }\n  }, [dispatch, opener]);\n\n\n  useEffect(() => {\n \n    setnoData(true);\n \n      \n    \n  }, [ ]);  \n\n  const Items =  songs.songs\n    .filter((data) => {\n      if (query === \"\") {\n        return data;\n      } else if (\n        data[\"im:name\"]?.label?.toLowerCase().includes(query.toLowerCase())\n      ) {\n        \n        return data;\n      }\n      \n    })\n    .map((data: any, index) => (\n      <tr>\n        <td className=\"align-middle\">\n          <img src={data[\"im:image\"][0]?.label} />\n        </td>\n        <td className=\"align-middle\">{data[\"im:name\"]?.label}</td>\n        <td className=\"align-middle\">{data[\"im:artist\"]?.label}</td>\n        <td className=\"align-middle\">{data[\"im:price\"]?.label}</td>\n      </tr>\n    ));\n\n  return (\n    <div className=\"container-fluid\">\n      <div className=\"row\">\n        <div className=\"col-12\">\n          <label htmlFor=\"small-radius-switch\">\n          <br />\n          <br />\n          <br />\n\n            <h3>\n              {opener ? \"Songs\" : \"Albums\"}{\" \"}\n              <span className=\"opener\">Choose between songs or albums</span>\n            </h3>\n            <Switch\n              checked={opener}\n              onChange={handleChange}\n              onColor=\"#86d3ff\"\n              onHandleColor=\"#2693e6\"\n              handleDiameter={30}\n              uncheckedIcon={false}\n              checkedIcon={false}\n              boxShadow=\"0px 1px 5px rgba(0, 0, 0, 0.6)\"\n              activeBoxShadow=\"0px 0px 1px 10px rgba(0, 0, 0, 0.2)\"\n              height={20}\n              width={48}\n              className=\"react-switch\"\n              id=\"material-switch\"\n            />\n          </label>\n\n          <br />\n          <div className=\"input-group mb-3\">\n              <input\n                type=\"text\"\n                onChange={(event) => setQuery(event.target.value)}\n                className=\"form-control\"\n                placeholder=\"Enter song or artist name\"\n                aria-label=\"Recipient's username\"\n                aria-describedby=\"button-addon2\"\n              />\n            </div>\n          <div className=\"table_con\">\n            <table className=\"table table-striped\">\n              <thead>\n                <tr>\n                  <th className=\"align-middle\"> Title </th>\n                  <th className=\"align-middle\"> </th>\n                  <th className=\"align-middle\"> Artist </th>\n                  <th className=\"align-middle\"> Price </th>\n                </tr>\n              </thead>\n              <tbody>{ Items.length>0 ?Items: noData?Items: <CircularProgress />}</tbody>\n            </table>\n          </div>\n          <>\n            <br />\n            {/* <div> */}\n          </>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","import {SONGS_ACTION, GET_SONGS, SongsActionType ,GetSongStateType} from '../types/Types';\n\n  \n  const initialState: GetSongStateType = {\n    songs: []\n  };\n  \n  export const getSongReducer = (\n    state = initialState,\n    action: SongsActionType\n  ): GetSongStateType => {\n    switch (action.type) {\n      case GET_SONGS:\n        return {\n          ...state,\n          songs: action.payload\n        };\n      default:\n        return state;\n    }\n  };","import { combineReducers } from 'redux';\nimport { getSongReducer } from './SongReducer';\n\nconst rootReducer = combineReducers({\n  songs: getSongReducer\n});\n\nexport default rootReducer;","import { createStore, applyMiddleware } from 'redux';\nimport thunkMiddleware from 'redux-thunk';\nimport rootReducer from '../reducers';\n\nconst store = createStore(\n  rootReducer,\n   applyMiddleware(thunkMiddleware) \n);\n\nexport type AppState = ReturnType<typeof rootReducer>;\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport App from './App';\nimport store from './redux/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}